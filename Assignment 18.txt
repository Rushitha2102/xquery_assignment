Assignment - 18
 
'4x − 7 * 2 − 3/+x * -x/3 * +5 - 3x/2'
 
 Write a query to split the above expression. Sum the x-coefficients that are in the numerator. Sum the constants that are in denominator. '-' symbol to be joined with the x-coefficients or constants if the list item before '-' is '/' or '*'. 
Expected Output:
Split list = 4x, -, 7, *, 2, -, 3, /, +x, *, -x, /, -3, *, +5, -, 3x, /, +2
Sum of x-coefficients = 4x, -x, 3x => 6x
Sum of constants = -3, +2 => -1

xquery version "1.0-ml";
let $expression := "4x−7*2−3/+x*-x/-3*+5- 3x/2"
let $normalized := replace($expression, "−", "-")
let $with-spaces := 
  replace(
    replace(
      replace(
        replace($normalized, "\*", " * "), 
      "/", " / "), 
    "\+", " + "), 
  "-", " - ")

let $tokens := 
  for $t in tokenize(normalize-space($with-spaces), "\s+")
  return $t

let $split :=
  for $i in 1 to count($tokens)
  return
    if (($tokens[$i] = "-" or $tokens[$i] = "+") 
        and $i > 1 
        and ($tokens[$i - 1] = "*" or $tokens[$i - 1] = "/")) then
      concat($tokens[$i], $tokens[$i + 1])
    else if (
      $i > 1 and
      ($tokens[$i - 1] = "-" or $tokens[$i - 1] = "+") and
      ($tokens[$i - 2] = "*" or $tokens[$i - 2] = "/")) then
      ()
    else if (not(($tokens[$i] = "+" or $tokens[$i] = "-") and 
        ($i > 1 and ($tokens[$i - 1] = "*" or $tokens[$i - 1] = "/")))) then
      $tokens[$i]
    else ()

let $coeff := function($term) {
  if (matches($term, "^-?x$")) then
    if (starts-with($term, "-")) then -1 else 1
  else
    number(replace($term, "x", ""))
}

let $x-terms :=
  for $i at $p in $split
  where contains($i, "x") and not($p > 1 and $split[$p - 1] = "/")
  return $i

let $const-terms :=
  for $i at $p in $split
  where not(contains($i, "x")) and $p > 1 and $split[$p - 1] = "/"
  return $i

let $xsum := sum(for $t in $x-terms return $coeff($t))
let $cstsum := sum(for $t in $const-terms return number($t))

return (
  concat("Split list = ", string-join($split, ", ")),
  concat("Sum of x-coefficients = ", string-join($x-terms, ", "), " => ", $xsum, "x"),
  concat("Sum of constants = ", string-join($const-terms, ", "), " => ", $cstsum)
)