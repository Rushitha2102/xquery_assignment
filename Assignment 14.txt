Create 50 documents(should have at least 5 elements under root element) in collection1 and 1000 documents(10 elements) in collection2 which are crosslinked. Write a query to update an element for random no. of docs in collection1, check if the value is updated in that document and then update the value for an element in crosslinked docs in collection2. Use transactions.


xquery version "1.0-ml";
for $i in (1 to 50) 
return
xdmp:document-insert(concat("emp",$i),
element root {
element name {concat("name"),$i},
element dn {$i},
element class {$i+1},
element percentage {$i+ 70},
element courseId {$i}

}, map:entry("collections","emp"))


xquery version "1.0-ml";
for $i in (1 to 1000) 
return
xdmp:document-insert(concat("dep",$i),
element root {
element dn {$i},
element dname {concat("dep"),$i},

element class {$i+1},
element percentage {$i+ 70},
element  course {concat("course"),$i},
element courseId {$i},
element   fee {xdmp:random(20000)},
element   roomno {$i+2},
element pname {concat("p"),$i} ,
element tname {concat("t"),$i}

}, map:entry("collections","dep"))

xquery version "1.0-ml";

declare option xdmp:transaction-mode "update";

for $uri in cts:uris("", (), cts:collection-query("emp"))
let $emp := doc($uri)/root
let $did := $emp/dn
let $ran := xdmp:random(10)
let $new-class := concat("class", $ran)

let $update-emp :=
  if ($emp/class) then
    xdmp:node-replace(
      $emp/class,
      element class { $new-class }
    )
  else ()


let $dep := cts:search(
  fn:doc(),
  cts:and-query((
    cts:collection-query("dep"),
    cts:path-range-query("/root/dn", "=", string($did))
  ))
)


let $update-dep :=
  if ($dep/root[dn = $did and class]) then
    xdmp:node-replace(
      $dep/root/class,
      element class { $new-class }
    )
  else ()


return xdmp:commit()

